version: '3.7'
services:
  server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ${SERVER_NAME}
    restart: always
    ports:
      - ${SERVER_PORT}
    depends_on:
      - mysql
      - redis
    environment:
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_PORT: ${MYSQL_PORT}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      DATABASE_URL: ${DATABASE_URL}
      TZ: Asia/Seoul
    volumes:
      - ${SERVER_VOLUME_ROOT}
    extra_hosts:
      - host.docker.internal:host-gateway
    networks:
      server-net:
        ipv4_address: ${SERVER_IP}

  mysql:
    image: mysql:latest
    container_name: ${MYSQL_NAME}
    restart: always
    # healthcheck:
    #   test: mysqladmin ping -h localhost -uroot -ppass
    #   interval: 5s
    #   timeout: 5s
    #   retries: 20
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      TZ: Asia/Seoul
    ports:
      - ${MYSQL_PORT}
    volumes:
      - ${MYSQL_VOLUMES_ROOT}
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    extra_hosts:
      - host.docker.internal:host-gateway
    networks:
      server-net:
        ipv4_address: ${MYSQL_IP}

  redis:
    image: redis:latest
    container_name: ${REDIS_NAME}
    restart: always
    # healthcheck:
    #   test: redis-cli ping
    #   interval: 5s
    #   timeout: 5s
    #   retries: 20
    environment:
      TZ: Asia/Seoul
    ports:
      - ${REDIS_PORT}
    volumes:
      - ${REDIS_VOLUMES_ROOT}
    extra_hosts:
      - host.docker.internal:host-gateway
    networks:
      server-net:
        ipv4_address: ${REDIS_IP}

networks:
  server-net:
    name: ${NETWORK_NAME}
    ipam:
      config:
        - subnet: ${SUBNET_IP}
